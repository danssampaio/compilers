INT 0 5
LIT 0 4
STO 0 8
CAL 0 6
LOD 0 9
OPR 0 0
INT 0 5
LOD 0 3
LIT 0 1
OPR 0 12
JPC 0 13    
STO 0 4
OPR 0 0
LOD 0 3
LIT 0 1
OPR 0 3
STO 0 8
CAL 0 6
LOD 0 3
LOD 0 9
OPR 0 4
STO 0 4
OPR 0 0

// main()
code[0].f = INT; code[0].l = 0; code[0].a = 5;        // Ram[5] Pilha[5]
code[1].f = LIT; code[1].l = 0; code[1].a = 4;        // Fatorial à se calcular 
code[2].f = STO; code[2].l = 0; code[2].a = 8;        // Salva como parâmetro
code[3].f = CAL; code[3].l = 0; code[3].a = 6;        // Chamando a função fat()
code[4].f = LOD; code[4].l = 0; code[4].a = 9;        // Return fat()
code[5].f = OPR; code[5].l = 0; code[5].a = 0;        // Return 0

//fat()
code[6].f = INT; code[6].l = 0; code[6].a = 5;         // Ram[5] Pilha[5]
code[7].f = LOD; code[7].l = 0; code[7].a = 3;         // Load parâmentro
code[8].f = LIT; code[8].l = 0; code[8].a = 1;         // Sobe 1 para comparação
code[9].f = OPR; code[9].l = 0; code[9].a = 12;        // Parâmetro <= 1 ??
code[10].f = JPC; code[10].l = 0; code[10].a = 13;    

//if(n <= 1)
code[11].f = STO; code[11].l = 0; code[11].a = 4;      // Return = resultado
code[12].f = OPR; code[12].l = 0; code[12].a = 0;      // OPR 0 0

//else
code[13].f = LOD; code[13].l = 0; code[13].a = 3;       // Load parâmetro
code[14].f = LIT; code[14].l = 0; code[14].a = 1;       // Sobe 1 para subtração
code[15].f = OPR; code[15].l = 0; code[15].a = 3;       // Parâmetro - 1
code[16].f = STO; code[16].l = 0; code[16].a = 8;       // Salva como parâmetro
code[17].f = CAL; code[17].l = 0; code[17].a = 6;       // Chama a função fat()

//mult
code[18].f = LOD; code[18].l = 0; code[18].a = 3;       // Load parâmetro
code[19].f = LOD; code[19].l = 0; code[19].a = 9;       // Load Return
code[20].f = OPR; code[20].l = 0; code[20].a = 4;       // Multiplica
code[21].f = STO; code[21].l = 0; code[21].a = 4;       // Salva no return
code[22].f = OPR; code[22].l = 0; code[22].a = 0;       // OPR 0 0
